(ns stockroom.v1.api)

(defprotocol V1Api
  (create-user-with-authentication!               [api user-data])
  (find-user-by-provider-and-uid                  [api provider uid])
  (add-authentication-to-user!                    [api user-id auth-data])
  (find-authentications-for-user                  [api user-id])
  (find-user-by-id                                [api user-id])
  (create-permissions-group!                      [api group-data])
  (find-all-permission-groups                     [api])
  (add-permission-to-group!                       [api options])
  (find-permissions-for-group                     [api group-id])
  (find-permission-group-by-id                    [api group-id])
  (remove-permission-from-group!                  [api options])
  (add-user-to-group!                             [api options])
  (remove-user-from-group!                        [api options])
  (find-all-users-in-group                        [api group-id])
  (find-all-users                                 [api])
  (find-all-groups-for-user                       [api user-id])
  (has-any-permission?                            [api user-id permissions])
  (find-all-permissions-for-user                  [api user-id])

  (create-client!                                 [api options])
  (update-client!                                 [api client-id options])
  (find-client-by-id                              [api client-id])
  (find-all-clients                               [api])
  (delete-client!                                 [api client-id])

  (create-skill!                                  [api options])
  (update-skill!                                  [api skill-id options])
  (find-skill-by-id                               [api skill-id])
  (find-all-skills                                [api])
  (find-all-skills-for-project                    [api project-id])

  (create-project!                                [api options])
  (update-project!                                [api project-id options])
  (find-project-by-id                             [api project-id])
  (find-all-projects                              [api options])
  (find-all-projects-for-client                   [api client-id])
  (find-all-director-engagements-by-person-id     [api director-id])
  (delete-project!                                [api project-id])

  (create-sow!                                    [api sow-data])
  (update-sow!                                    [api sow-id sow-data])
  (find-sow-by-id                                 [api sow-id])
  (find-all-sows                                  [api options])
  (delete-sow!                                    [api sow-id])

  (create-project-sow!                            [api project-sow-data])
  (update-project-sow!                            [api project-sow-id project-sow-data])
  (find-project-sow-by-id                         [api project-sow-id])
  (find-all-project-sows                          [api])
  (delete-project-sow!                            [api project-sow-id])
  (delete-project-sows-for-sow!                   [api sow-id])

  (create-project-skill!                          [api project-skill-data])
  (find-project-skill-by-id                       [api project-skill-id])
  (delete-project-skills-for-project!             [api project-id])

  (create-person!                                 [api people-data])
  (update-person!                                 [api person-id person-data])
  (find-person-by-id                              [api person-id])
  (find-all-people                                [api])
  (search-people                                  [api criteria])
  (find-current-people-by-position                [api position-name])

  (create-employment-position!                    [api position-data])
  (find-all-employment-positions                  [api])
  (find-employment-position-by-id                 [api position-id])
  (find-employment-position-by-name               [api position-name])

  (create-employment!                             [api employment-data])
  (update-employment!                             [api employment-id employment-data])
  (find-employment-by-id                          [api employment-id])
  (find-all-employments                           [api options])
  (find-all-location-memberships-for-employment   [api employment-id])

  (create-engagement!                             [api engagement-data])
  (find-engagement-by-id                          [api engagement-id])
  (update-engagement!                             [api engagement-id engagement-data])
  (delete-engagement!                             [api engagement-id])
  (find-all-engagements                           [api options])

  (create-apprenticeship!                         [api apprenticeship-data])
  (find-apprenticeship-by-id                      [api apprenticeship-id])
  (find-all-apprenticeships                       [api])
  (upcoming-apprentice-graduations-by-location    [api])

  (create-director-engagement!                    [api director-engagement-data])
  (update-director-engagement!                    [api director-engagement-id director-engagement-data])
  (find-director-engagement-by-id                 [api director-engagement-id])
  (find-current-directors                         [api])

  (create-location!                               [api location-data])
  (find-location-by-id                            [api location-id])
  (find-all-locations                             [api])

  (create-location-membership!                    [api employment-id location-id location-membership-data])
  (find-location-membership-by-id                 [api location-membership-id])
  (find-current-location-membership-for-people    [api person-ids])
  (delete-location-membership!                    [api location-membership-id]))
